
             ---===[ Qubes Security Bulletin 071 ]===---

                              2021-09-09

              Fatal options filtering flaw in Split GPG


User action required
---------------------

Users must install the following specific packages in order to address
the issues discussed in this bulletin:

  For Qubes 4.0, in templates/standalones:
  - qubes-gpg-split 2.0.53

  For Qubes 4.1, in templates/standalones:
  - qubes-gpg-split 2.0.53

Due to easiness of this issue exploitation, the packages are available
in current (stable) repository immediately. They are to be installed
via the Qubes Update Tool or its command-line equivalents. [1]


Summary
--------

Split GPG[2] is designed to isolate private keys from the application
using them - to prevent extracting them, and control when are used.
The isolation is done by forwarding gpg calls into a "backend" VM
(that holds the actual keys), but with only some options allowed.
This filtering includes rejecting options like `--export-secret-keys`,
or options that could otherwise leak private keys to the frontend
VM. Unfortunately, several options were declared incorrectly,
which allowed to bypass the filtering.


Impact
-------

Attacker controlling a frontend VM (the one where qubes-gpg-client is
executed) can extract arbitrary file (including secret key) from the
backend VM.


Discussion
-----------

Several gpg options were declared incorrectly in split-gpg, making
the latter interpret them differently than the actual gpg called in the
backend VM (the one keeping the keys). If an option would
be interpreted as an argument to another option by split-gpg, it would
be allowed by split-gpg (as the filtering is done on the options
level, not their arguments), thus bypassing the filtering.

Specifically, this applies to:
 - all `--s2k-*` options were declares as not taking an argument,
 while in fact they do take an argument
 - `--export-ssh-key` was declares as taking an argument, while it
 doesn't take one directly; it does change the meaning of the
 positional arguments, though
 - `--with-colons` was aliased with `-k`, which differs in argument
 requirement
 - `--default-recipient` (taking an argument) was interpreted as
 `--default-recipient-self` (not taking an argument)
 - `--display` was interpreted as `--display-charset`, thus
 `--display` was allowed while it should be denied

As the immediate fix, we have adjusted all those inconsistencies, and also
we have added automated test that verifies if gpg's understanding of the
options matches what split-gpg understood.

But generally, we will prioritize finishing split-gpg2[3], which does not
rely on option filtering at all. Instead, it utilizes gpg-agent's
protocol to delegate only secret keys processing to the backend VM.
This, besides removing the fragile options filtering, hugely reduce
attack surface, because most of the untrusted data processing is done
on the frontend VM and never reaches the backend one.

Credits
--------

This issue was discovered by Demi Marie Obenour.

References
-----------

[1] https://www.qubes-os.org/doc/updating-qubes-os/
[2] https://www.qubes-os.org/doc/split-gpg/
[3] https://github.com/QubesOS/qubes-issues/issues/474

--
The Qubes Security Team
https://www.qubes-os.org/security/
